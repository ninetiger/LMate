@using LMate.BusinessObjects
@model LMate.BusinessObjects.RentalIncomeDetail

<div>
    @Html.LabelFor(x => x.Rates)
    <span class="dollarSign">$</span>
    @Html.TextBoxFor(x => x.Rates)

    @Html.LabelFor(x => x.Insurance)
    <span class="dollarSign">$</span>
    @Html.TextBoxFor(x => x.Insurance)

    @Html.LabelFor(x => x.Interest)
    <span class="dollarSign">$</span>
    @Html.TextBoxFor(x => x.Interest)

    @Html.LabelFor(x => x.AgentCollectionFees)
    <span class="dollarSign">$</span>
    @Html.TextBoxFor(x => x.AgentCollectionFees)

    @Html.LabelFor(x => x.RepairsAndMaintenance)
    @for (int i = 0; i < Model.RepairsAndMaintenance.Count; i++)
    {
        if (Model.RepairsAndMaintenance[i].Type == ReceiptType.ReparisAndMaintenance)
        {
            @Html.TextBoxFor(x => x.RepairsAndMaintenance[i].Description)

            <span class="dollarSign">$</span>
            @Html.TextBoxFor(x => x.RepairsAndMaintenance[i].Price)
        }
    }
    <span class="dollarSign">$</span>
    @Html.DisplayTextFor(x => x.SumRepairsAndMaintenance)


    @Html.LabelFor(x => x.OtherList)
    @for (int i = 0; i < Model.OtherList.Count; i++)
    {
        if (Model.OtherList[i].Type == ReceiptType.Other)
        {
            @Html.TextBoxFor(x => x.OtherList[i].Description)

            <span class="dollarSign">$</span>
            @Html.TextBoxFor(x => x.OtherList[i].Price)
        }
    }
    <span class="dollarSign">$</span>
    @Html.DisplayTextFor(x => x.SumOtherList)

    <p><label>Depreciation</label></p>
    <p>
        Buildings: <span class="dollarSign">$</span>
        @(Model.BuildingDepreciation == null
            ? Html.DisplayTextFor(x => 0m)
            : Html.DisplayTextFor(x => x.BuildingDepreciation.DepreciationClaimed))
    </p>
    <p>Assets: <span class="dollarSign">$</span>@Html.DisplayTextFor(x => x.AssetDepreciationsSum)</p>


</div>
