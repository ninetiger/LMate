@model WebUI.Models.ReceiptEditViewModel

@{
    ViewBag.Title = "Edit" + @Model.ReceiptViewModel.Description;
    Layout = "~/Views/Shared/_LandlordLayout.cshtml";
}

<div class="page-header">
    <h2>Edit Receipt @Model.ReceiptViewModel.Description</h2>
</div>
@Html.ValidationSummary()
<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">Edit Receipt</h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("Edit", "Receipts", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(x => x.ReceiptViewModel.Id)
            @*@Html.HiddenFor(x => x.ReceiptViewModel.ReceiptImageIds)*@
            <div class="row">
                <div class="col-xs-6 col-sm-4">
                    @Html.LabelFor(x => x.ReceiptViewModel.Description)
                </div>
                <div class="col-xs-6 col-sm-4">
                    @Html.LabelFor(x => x.ReceiptViewModel.PurchaseDate)
                </div>
                <div class="col-xs-6 col-sm-4">
                    @Html.LabelFor(x => x.ReceiptViewModel.VendorId)
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6 col-sm-4">
                    @Html.TextBoxFor(x => x.ReceiptViewModel.Description, new { @class = "form-control input-sm" })
                </div>
                <div class="col-xs-6 col-sm-4">
                    @Html.TextBoxFor(x => x.ReceiptViewModel.PurchaseDate, new { @class = "form-control input-sm" })
                </div>
                <div class="col-xs-6 col-sm-4">
                    @Html.TextBoxFor(x => x.ReceiptViewModel.VendorId, new { @class = "form-control input-sm" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-xs-6 col-sm-4">
                    @Html.LabelFor(x => x.ReceiptViewModel.Price)
                </div>
                <div class="col-xs-6 col-sm-4">
                    @Html.LabelFor(x => x.ReceiptViewModel.GstRate)
                </div>
                <div class="col-xs-6 col-sm-4">
                    @Html.LabelFor(x => x.ReceiptViewModel.AccountTypeId)
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6 col-sm-4">
                    @Html.TextBoxFor(x => x.ReceiptViewModel.Price, new { @class = "form-control input-sm" })
                </div>
                <div class="col-xs-6 col-sm-4">
                    @Html.TextBoxFor(x => x.ReceiptViewModel.GstRate, new { @class = "form-control input-sm" })
                </div>
                <div class="col-xs-6 col-sm-4">
                    @Html.DropDownListFor(x => x.ReceiptViewModel.AccountTypeId, Model.AccountTypeSelectList, string.Empty, new { @class = "form-control" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-xs-6 col-sm-4">
                    @Html.CheckBoxFor(x => x.ReceiptViewModel.IsBulk)
                    @Html.LabelFor(x => x.ReceiptViewModel.IsBulk)
                </div>
                <div class="col-xs-6 col-sm-4">
                    @Html.LabelFor(x => x.ReceiptViewModel.CurrencyId)
                    @Html.DropDownListFor(x => x.ReceiptViewModel.CurrencyId, Model.CurrencySelectList, string.Empty, new { @class = "form-control" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-xs-12 col-sm-12">

                    @Html.Label("Image")
       @{
            int imageCount = 0;
            if (@Model.ReceiptViewModel.ReceiptImageIds != null)
            {
                imageCount = @Model.ReceiptViewModel.ReceiptImageIds.Count();
            }
            if (imageCount > 0)
            {
                for (var i = 0; i < imageCount; i++)
                {
                    var imageId = @Model.ReceiptViewModel.ReceiptImageIds[i];
                    <img width="100" height="100" class="img-rounded"
                         src="@Url.Action("GetImage", "Receipts", new {imageId })" alt="ReceiptImage" />
                        @Html.HiddenFor(x => x.ReceiptViewModel.ReceiptImageIds[i])
                }

            }
            else
            {
                @:None
            }
        }

                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-xs-6 col-sm-4">
                    @Html.Label("Upload new receipt image")
                    <input type="file" name="Image" />
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-xs-6 col-sm-4">
                    @Html.LabelFor(x => x.ReceiptViewModel.Note)
                    @Html.TextBoxFor(x => x.ReceiptViewModel.Note, new { @class = "form-control" })
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6 col-sm-4">
                    <input type="submit" value="Save" />
                    @Html.ActionLink("Cancel and return to List", "Index")
                </div>
            </div>
        }
    </div>
</div>

@section Contents{}
@section Scripts {
    <script src="/Scripts/LMate/Receipts_Edit.js"></script>
}
@section DocumentReady
{
    @*GetImages();*@
}
